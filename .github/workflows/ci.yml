name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  DEBIAN_FRONTEND: noninteractive

jobs:
  lychee:
    name: QA (Lychee)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Restore lychee cache
        uses: actions/cache@v4
        with:
          path: .lycheecache
          key: cache-lychee-${{ github.sha }}
          restore-keys: cache-lychee-
      - name: Run Lychee
        uses: lycheeverse/lychee-action@v2
        with:
          args: --cache --max-cache-age 1d .

  cargo-machete:
    name: QA (Cargo Machete)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-machete
      - name: Run cargo-machete
        run: cargo machete --skip-target-dir

  pre-commit:
    name: QA (pre-commit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pre-commit
      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure
        env:
          # fmt is failing to download on CI
          SKIP: fmt
      - name: Run rustfmt
        run: cargo fmt --all -- --check

  test:
    name: Test
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          # Rust problem matchers make the real output
          # of *.stderr diffs impossible to read.
          matcher: false
      - name: Install Dylint
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-dylint,dylint-link
      - name: Run unit tests
        run: cargo test --all

  test-release-leptos-unique-ids:
    needs:
      - lychee
      - cargo-machete
      - pre-commit
      - test
    if: |
      '${{ github.event.pull_request.user.login }}' == 'mondeja' ||
      startsWith(github.ref, 'refs/tags/') ||
      github.ref == 'refs/heads/master'
    name: Test leptos-unique-ids crate publishing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Publish (dry run)
        run: |
          cargo login ${{ secrets.CRATES_TOKEN }}
          cargo publish -v --dry-run

  release-leptos-unique-ids:
    if: startsWith(github.ref, 'refs/tags/')
    name: Publish leptos-unique-ids crate
    needs: test-release-leptos-unique-ids
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Publish
        run: |
          cargo login ${{ secrets.CRATES_TOKEN }}
          cargo publish -v

  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Create release
    needs: release-leptos-unique-ids
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get tag metadata
        id: tag
        run: |
          TAG_TITLE=${GITHUB_REF#refs/*/}
          echo "title=$TAG_TITLE" >> $GITHUB_OUTPUT
      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.tag.outputs.title }}
          tag_name: ${{ steps.tag.outputs.title }}
          body: |
            See [CHANGELOG](https://github.com/mondeja/leptos-unique-ids/blob/master/CHANGELOG.md).
          draft: false
          prerelease: false
